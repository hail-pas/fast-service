# ruff: noqa
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: hello.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x0bhello.proto"\xb5\x01\n\x07HelloIn\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0b\n\x03\x61ge\x18\x02 \x01(\x05\x12\x12\n\nsuper_user\x18\x03 \x01(\x08\x12\x1f\n\x06\x63orpus\x18\x04 \x01(\x0e\x32\x0f.HelloIn.Corpus"Z\n\x06\x43orpus\x12\r\n\tUNIVERSAL\x10\x00\x12\x07\n\x03WEB\x10\x01\x12\n\n\x06IMAGES\x10\x02\x12\t\n\x05LOCAL\x10\x03\x12\x08\n\x04NEWS\x10\x04\x12\x0c\n\x08PRODUCTS\x10\x05\x12\t\n\x05VIDEO\x10\x06"\x19\n\x08HelloOut\x12\r\n\x05infos\x18\x01 \x01(\t"+\n\rMultiHelloOut\x12\x1a\n\x07replies\x18\x01 \x03(\x0b\x32\t.HelloOut2\xdd\x01\n\x05Hello\x12\x1f\n\x08HelloRPC\x12\x08.HelloIn\x1a\t.HelloOut\x12)\n\rMultiHelloRPC\x12\x08.HelloIn\x1a\x0e.MultiHelloOut\x12*\n\x11ResStreamHelloRPC\x12\x08.HelloIn\x1a\t.HelloOut0\x01\x12/\n\x11ReqStreamHelloRPC\x12\x08.HelloIn\x1a\x0e.MultiHelloOut(\x01\x12+\n\x10\x42iStreamHelloRPC\x12\x08.HelloIn\x1a\t.HelloOut(\x01\x30\x01\x62\x06proto3',
)

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, "hello_pb2", globals())
if _descriptor._USE_C_DESCRIPTORS is False:
    DESCRIPTOR._options = None
    _HELLOIN._serialized_start = 16
    _HELLOIN._serialized_end = 197
    _HELLOIN_CORPUS._serialized_start = 107
    _HELLOIN_CORPUS._serialized_end = 197
    _HELLOOUT._serialized_start = 199
    _HELLOOUT._serialized_end = 224
    _MULTIHELLOOUT._serialized_start = 226
    _MULTIHELLOOUT._serialized_end = 269
    _HELLO._serialized_start = 272
    _HELLO._serialized_end = 493
# @@protoc_insertion_point(module_scope)
